// Code generated by Slice Machine. DO NOT EDIT.

import type * as prismic from '@prismicio/client';

type Simplify<T> = {
  [KeyType in keyof T]: T[KeyType];
};
/** Content for Project documents */
interface ProjectDocumentData {
  /**
   * Title field in *Project*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: project.title
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
   *
   */
  title: prismic.KeyTextField;
  /**
   * Description field in *Project*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: project.description
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
   *
   */
  description: prismic.RichTextField;
  /**
   * Url field in *Project*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: project.url
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
   *
   */
  url: prismic.KeyTextField;
  /**
   * Github field in *Project*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: project.github
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
   *
   */
  github: prismic.KeyTextField;
  /**
   * Image field in *Project*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: project.image
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/core-concepts/image
   *
   */
  image: prismic.ImageField<never>;
  /**
   * Slice Zone field in *Project*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: project.slices[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/core-concepts/slices
   *
   */
  slices: prismic.SliceZone<ProjectDocumentDataSlicesSlice>;
}
/**
 * Slice for *Project → Slice Zone*
 *
 */
type ProjectDocumentDataSlicesSlice = TagsSlice;
/**
 * Project document from Prismic
 *
 * - **API ID**: `project`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type ProjectDocument<Lang extends string = string> = prismic.PrismicDocumentWithUID<
  Simplify<ProjectDocumentData>,
  'project',
  Lang
>;
/** Content for Skill documents */
interface SkillDocumentData {
  /**
   * Name field in *Skill*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: skill.name
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
   *
   */
  name: prismic.KeyTextField;
  /**
   * Type field in *Skill*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **Default Value**: Backend
   * - **API ID Path**: skill.type
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/core-concepts/select
   *
   */
  type: prismic.SelectField<'Backend' | 'Frontend' | 'Other', 'filled'>;
}
/**
 * Skill document from Prismic
 *
 * - **API ID**: `skill`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type SkillDocument<Lang extends string = string> = prismic.PrismicDocumentWithUID<
  Simplify<SkillDocumentData>,
  'skill',
  Lang
>;
export type AllDocumentTypes = ProjectDocument | SkillDocument;
/**
 * Item in Tags → Items
 *
 */
export interface TagsSliceDefaultItem {
  /**
   * Tag field in *Tags → Items*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: tags.items[].tag
   * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
   *
   */
  tag: prismic.KeyTextField;
}
/**
 * Default variation for Tags Slice
 *
 * - **API ID**: `default`
 * - **Description**: `Default`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type TagsSliceDefault = prismic.SharedSliceVariation<
  'default',
  Record<string, never>,
  Simplify<TagsSliceDefaultItem>
>;
/**
 * Slice variation for *Tags*
 *
 */
type TagsSliceVariation = TagsSliceDefault;
/**
 * Tags Shared Slice
 *
 * - **API ID**: `tags`
 * - **Description**: `Tags`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type TagsSlice = prismic.SharedSlice<'tags', TagsSliceVariation>;
declare module '@prismicio/client' {
  interface CreateClient {
    (
      repositoryNameOrEndpoint: string,
      options?: prismic.ClientConfig,
    ): prismic.Client<AllDocumentTypes>;
  }
  namespace Content {
    export type {
      ProjectDocumentData,
      ProjectDocumentDataSlicesSlice,
      ProjectDocument,
      SkillDocumentData,
      SkillDocument,
      AllDocumentTypes,
      TagsSliceDefaultItem,
      TagsSliceDefault,
      TagsSliceVariation,
      TagsSlice,
    };
  }
}
